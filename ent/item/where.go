// Code generated by ent, DO NOT EDIT.

package item

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/khanakia/entautoslow/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldID, id))
}

// TxTypeID applies equality check predicate on the "tx_type_id" field. It's identical to TxTypeIDEQ.
func TxTypeID(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldTxTypeID, v))
}

// Sku applies equality check predicate on the "sku" field. It's identical to SkuEQ.
func Sku(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSku, v))
}

// Title applies equality check predicate on the "title" field. It's identical to TitleEQ.
func Title(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldTitle, v))
}

// SubTitle applies equality check predicate on the "sub_title" field. It's identical to SubTitleEQ.
func SubTitle(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSubTitle, v))
}

// StatusID applies equality check predicate on the "status_id" field. It's identical to StatusIDEQ.
func StatusID(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldStatusID, v))
}

// NoIndex applies equality check predicate on the "no_index" field. It's identical to NoIndexEQ.
func NoIndex(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldNoIndex, v))
}

// ItemCategoryID applies equality check predicate on the "item_category_id" field. It's identical to ItemCategoryIDEQ.
func ItemCategoryID(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemCategoryID, v))
}

// BaseOnSalePrice applies equality check predicate on the "base_on_sale_price" field. It's identical to BaseOnSalePriceEQ.
func BaseOnSalePrice(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldBaseOnSalePrice, v))
}

// RetailPrice applies equality check predicate on the "retail_price" field. It's identical to RetailPriceEQ.
func RetailPrice(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldRetailPrice, v))
}

// SalePrice applies equality check predicate on the "sale_price" field. It's identical to SalePriceEQ.
func SalePrice(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSalePrice, v))
}

// ShippingProfileIDNum applies equality check predicate on the "shipping_profile_id_num" field. It's identical to ShippingProfileIDNumEQ.
func ShippingProfileIDNum(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShippingProfileIDNum, v))
}

// OptimizationIDNum applies equality check predicate on the "optimization_id_num" field. It's identical to OptimizationIDNumEQ.
func OptimizationIDNum(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldOptimizationIDNum, v))
}

// Qty applies equality check predicate on the "qty" field. It's identical to QtyEQ.
func Qty(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldQty, v))
}

// MaximumOrderQty applies equality check predicate on the "maximum_order_qty" field. It's identical to MaximumOrderQtyEQ.
func MaximumOrderQty(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldMaximumOrderQty, v))
}

// PkgWidth applies equality check predicate on the "pkg_width" field. It's identical to PkgWidthEQ.
func PkgWidth(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgWidth, v))
}

// PkgHeight applies equality check predicate on the "pkg_height" field. It's identical to PkgHeightEQ.
func PkgHeight(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgHeight, v))
}

// PkgLength applies equality check predicate on the "pkg_length" field. It's identical to PkgLengthEQ.
func PkgLength(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgLength, v))
}

// PkgWeight applies equality check predicate on the "pkg_weight" field. It's identical to PkgWeightEQ.
func PkgWeight(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgWeight, v))
}

// ShortDesc applies equality check predicate on the "short_desc" field. It's identical to ShortDescEQ.
func ShortDesc(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShortDesc, v))
}

// Descr applies equality check predicate on the "descr" field. It's identical to DescrEQ.
func Descr(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldDescr, v))
}

// ImageUrl1 applies equality check predicate on the "image_url1" field. It's identical to ImageUrl1EQ.
func ImageUrl1(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl1, v))
}

// ImageUrl2 applies equality check predicate on the "image_url2" field. It's identical to ImageUrl2EQ.
func ImageUrl2(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl2, v))
}

// ImageUrl3 applies equality check predicate on the "image_url3" field. It's identical to ImageUrl3EQ.
func ImageUrl3(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl3, v))
}

// ImageUrl4 applies equality check predicate on the "image_url4" field. It's identical to ImageUrl4EQ.
func ImageUrl4(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl4, v))
}

// ImageUrl5 applies equality check predicate on the "image_url5" field. It's identical to ImageUrl5EQ.
func ImageUrl5(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl5, v))
}

// Condition applies equality check predicate on the "condition" field. It's identical to ConditionEQ.
func Condition(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldCondition, v))
}

// Brand applies equality check predicate on the "brand" field. It's identical to BrandEQ.
func Brand(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldBrand, v))
}

// Gender applies equality check predicate on the "gender" field. It's identical to GenderEQ.
func Gender(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldGender, v))
}

// AgeGroup applies equality check predicate on the "age_group" field. It's identical to AgeGroupEQ.
func AgeGroup(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldAgeGroup, v))
}

// Color applies equality check predicate on the "color" field. It's identical to ColorEQ.
func Color(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldColor, v))
}

// Size applies equality check predicate on the "size" field. It's identical to SizeEQ.
func Size(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSize, v))
}

// UxmItemIDNum applies equality check predicate on the "uxm_item_id_num" field. It's identical to UxmItemIDNumEQ.
func UxmItemIDNum(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUxmItemIDNum, v))
}

// Sent applies equality check predicate on the "sent" field. It's identical to SentEQ.
func Sent(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSent, v))
}

// SentAt applies equality check predicate on the "sent_at" field. It's identical to SentAtEQ.
func SentAt(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSentAt, v))
}

// HasError applies equality check predicate on the "has_error" field. It's identical to HasErrorEQ.
func HasError(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldHasError, v))
}

// LastLogID applies equality check predicate on the "last_log_id" field. It's identical to LastLogIDEQ.
func LastLogID(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldLastLogID, v))
}

// FeedResponse applies equality check predicate on the "feed_response" field. It's identical to FeedResponseEQ.
func FeedResponse(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldFeedResponse, v))
}

// Keywords applies equality check predicate on the "keywords" field. It's identical to KeywordsEQ.
func Keywords(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldKeywords, v))
}

// Sync applies equality check predicate on the "sync" field. It's identical to SyncEQ.
func Sync(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSync, v))
}

// UserID applies equality check predicate on the "user_id" field. It's identical to UserIDEQ.
func UserID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUserID, v))
}

// ShippingProfileID applies equality check predicate on the "shipping_profile_id" field. It's identical to ShippingProfileIDEQ.
func ShippingProfileID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShippingProfileID, v))
}

// OptimizationID applies equality check predicate on the "optimization_id" field. It's identical to OptimizationIDEQ.
func OptimizationID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldOptimizationID, v))
}

// UxmItemID applies equality check predicate on the "uxm_item_id" field. It's identical to UxmItemIDEQ.
func UxmItemID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUxmItemID, v))
}

// ParentID applies equality check predicate on the "parent_id" field. It's identical to ParentIDEQ.
func ParentID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldParentID, v))
}

// ItemTypeID applies equality check predicate on the "item_type_id" field. It's identical to ItemTypeIDEQ.
func ItemTypeID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemTypeID, v))
}

// UID applies equality check predicate on the "uid" field. It's identical to UIDEQ.
func UID(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUID, v))
}

// IsParent applies equality check predicate on the "is_parent" field. It's identical to IsParentEQ.
func IsParent(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsParent, v))
}

// TxTypeIDEQ applies the EQ predicate on the "tx_type_id" field.
func TxTypeIDEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldTxTypeID, v))
}

// TxTypeIDNEQ applies the NEQ predicate on the "tx_type_id" field.
func TxTypeIDNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldTxTypeID, v))
}

// TxTypeIDIn applies the In predicate on the "tx_type_id" field.
func TxTypeIDIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldTxTypeID, vs...))
}

// TxTypeIDNotIn applies the NotIn predicate on the "tx_type_id" field.
func TxTypeIDNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldTxTypeID, vs...))
}

// TxTypeIDGT applies the GT predicate on the "tx_type_id" field.
func TxTypeIDGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldTxTypeID, v))
}

// TxTypeIDGTE applies the GTE predicate on the "tx_type_id" field.
func TxTypeIDGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldTxTypeID, v))
}

// TxTypeIDLT applies the LT predicate on the "tx_type_id" field.
func TxTypeIDLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldTxTypeID, v))
}

// TxTypeIDLTE applies the LTE predicate on the "tx_type_id" field.
func TxTypeIDLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldTxTypeID, v))
}

// TxTypeIDIsNil applies the IsNil predicate on the "tx_type_id" field.
func TxTypeIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldTxTypeID))
}

// TxTypeIDNotNil applies the NotNil predicate on the "tx_type_id" field.
func TxTypeIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldTxTypeID))
}

// SkuEQ applies the EQ predicate on the "sku" field.
func SkuEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSku, v))
}

// SkuNEQ applies the NEQ predicate on the "sku" field.
func SkuNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSku, v))
}

// SkuIn applies the In predicate on the "sku" field.
func SkuIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldSku, vs...))
}

// SkuNotIn applies the NotIn predicate on the "sku" field.
func SkuNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldSku, vs...))
}

// SkuGT applies the GT predicate on the "sku" field.
func SkuGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldSku, v))
}

// SkuGTE applies the GTE predicate on the "sku" field.
func SkuGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldSku, v))
}

// SkuLT applies the LT predicate on the "sku" field.
func SkuLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldSku, v))
}

// SkuLTE applies the LTE predicate on the "sku" field.
func SkuLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldSku, v))
}

// SkuContains applies the Contains predicate on the "sku" field.
func SkuContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldSku, v))
}

// SkuHasPrefix applies the HasPrefix predicate on the "sku" field.
func SkuHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldSku, v))
}

// SkuHasSuffix applies the HasSuffix predicate on the "sku" field.
func SkuHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldSku, v))
}

// SkuIsNil applies the IsNil predicate on the "sku" field.
func SkuIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSku))
}

// SkuNotNil applies the NotNil predicate on the "sku" field.
func SkuNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSku))
}

// SkuEqualFold applies the EqualFold predicate on the "sku" field.
func SkuEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldSku, v))
}

// SkuContainsFold applies the ContainsFold predicate on the "sku" field.
func SkuContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldSku, v))
}

// TitleEQ applies the EQ predicate on the "title" field.
func TitleEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldTitle, v))
}

// TitleNEQ applies the NEQ predicate on the "title" field.
func TitleNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldTitle, v))
}

// TitleIn applies the In predicate on the "title" field.
func TitleIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldTitle, vs...))
}

// TitleNotIn applies the NotIn predicate on the "title" field.
func TitleNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldTitle, vs...))
}

// TitleGT applies the GT predicate on the "title" field.
func TitleGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldTitle, v))
}

// TitleGTE applies the GTE predicate on the "title" field.
func TitleGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldTitle, v))
}

// TitleLT applies the LT predicate on the "title" field.
func TitleLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldTitle, v))
}

// TitleLTE applies the LTE predicate on the "title" field.
func TitleLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldTitle, v))
}

// TitleContains applies the Contains predicate on the "title" field.
func TitleContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldTitle, v))
}

// TitleHasPrefix applies the HasPrefix predicate on the "title" field.
func TitleHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldTitle, v))
}

// TitleHasSuffix applies the HasSuffix predicate on the "title" field.
func TitleHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldTitle, v))
}

// TitleIsNil applies the IsNil predicate on the "title" field.
func TitleIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldTitle))
}

// TitleNotNil applies the NotNil predicate on the "title" field.
func TitleNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldTitle))
}

// TitleEqualFold applies the EqualFold predicate on the "title" field.
func TitleEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldTitle, v))
}

// TitleContainsFold applies the ContainsFold predicate on the "title" field.
func TitleContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldTitle, v))
}

// SubTitleEQ applies the EQ predicate on the "sub_title" field.
func SubTitleEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSubTitle, v))
}

// SubTitleNEQ applies the NEQ predicate on the "sub_title" field.
func SubTitleNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSubTitle, v))
}

// SubTitleIn applies the In predicate on the "sub_title" field.
func SubTitleIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldSubTitle, vs...))
}

// SubTitleNotIn applies the NotIn predicate on the "sub_title" field.
func SubTitleNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldSubTitle, vs...))
}

// SubTitleGT applies the GT predicate on the "sub_title" field.
func SubTitleGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldSubTitle, v))
}

// SubTitleGTE applies the GTE predicate on the "sub_title" field.
func SubTitleGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldSubTitle, v))
}

// SubTitleLT applies the LT predicate on the "sub_title" field.
func SubTitleLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldSubTitle, v))
}

// SubTitleLTE applies the LTE predicate on the "sub_title" field.
func SubTitleLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldSubTitle, v))
}

// SubTitleContains applies the Contains predicate on the "sub_title" field.
func SubTitleContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldSubTitle, v))
}

// SubTitleHasPrefix applies the HasPrefix predicate on the "sub_title" field.
func SubTitleHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldSubTitle, v))
}

// SubTitleHasSuffix applies the HasSuffix predicate on the "sub_title" field.
func SubTitleHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldSubTitle, v))
}

// SubTitleIsNil applies the IsNil predicate on the "sub_title" field.
func SubTitleIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSubTitle))
}

// SubTitleNotNil applies the NotNil predicate on the "sub_title" field.
func SubTitleNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSubTitle))
}

// SubTitleEqualFold applies the EqualFold predicate on the "sub_title" field.
func SubTitleEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldSubTitle, v))
}

// SubTitleContainsFold applies the ContainsFold predicate on the "sub_title" field.
func SubTitleContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldSubTitle, v))
}

// StatusIDEQ applies the EQ predicate on the "status_id" field.
func StatusIDEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldStatusID, v))
}

// StatusIDNEQ applies the NEQ predicate on the "status_id" field.
func StatusIDNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldStatusID, v))
}

// StatusIDIn applies the In predicate on the "status_id" field.
func StatusIDIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldStatusID, vs...))
}

// StatusIDNotIn applies the NotIn predicate on the "status_id" field.
func StatusIDNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldStatusID, vs...))
}

// StatusIDGT applies the GT predicate on the "status_id" field.
func StatusIDGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldStatusID, v))
}

// StatusIDGTE applies the GTE predicate on the "status_id" field.
func StatusIDGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldStatusID, v))
}

// StatusIDLT applies the LT predicate on the "status_id" field.
func StatusIDLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldStatusID, v))
}

// StatusIDLTE applies the LTE predicate on the "status_id" field.
func StatusIDLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldStatusID, v))
}

// StatusIDIsNil applies the IsNil predicate on the "status_id" field.
func StatusIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldStatusID))
}

// StatusIDNotNil applies the NotNil predicate on the "status_id" field.
func StatusIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldStatusID))
}

// NoIndexEQ applies the EQ predicate on the "no_index" field.
func NoIndexEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldNoIndex, v))
}

// NoIndexNEQ applies the NEQ predicate on the "no_index" field.
func NoIndexNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldNoIndex, v))
}

// NoIndexIsNil applies the IsNil predicate on the "no_index" field.
func NoIndexIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldNoIndex))
}

// NoIndexNotNil applies the NotNil predicate on the "no_index" field.
func NoIndexNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldNoIndex))
}

// ItemCategoryIDEQ applies the EQ predicate on the "item_category_id" field.
func ItemCategoryIDEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemCategoryID, v))
}

// ItemCategoryIDNEQ applies the NEQ predicate on the "item_category_id" field.
func ItemCategoryIDNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldItemCategoryID, v))
}

// ItemCategoryIDIn applies the In predicate on the "item_category_id" field.
func ItemCategoryIDIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldItemCategoryID, vs...))
}

// ItemCategoryIDNotIn applies the NotIn predicate on the "item_category_id" field.
func ItemCategoryIDNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldItemCategoryID, vs...))
}

// ItemCategoryIDGT applies the GT predicate on the "item_category_id" field.
func ItemCategoryIDGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldItemCategoryID, v))
}

// ItemCategoryIDGTE applies the GTE predicate on the "item_category_id" field.
func ItemCategoryIDGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldItemCategoryID, v))
}

// ItemCategoryIDLT applies the LT predicate on the "item_category_id" field.
func ItemCategoryIDLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldItemCategoryID, v))
}

// ItemCategoryIDLTE applies the LTE predicate on the "item_category_id" field.
func ItemCategoryIDLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldItemCategoryID, v))
}

// ItemCategoryIDIsNil applies the IsNil predicate on the "item_category_id" field.
func ItemCategoryIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldItemCategoryID))
}

// ItemCategoryIDNotNil applies the NotNil predicate on the "item_category_id" field.
func ItemCategoryIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldItemCategoryID))
}

// BaseOnSalePriceEQ applies the EQ predicate on the "base_on_sale_price" field.
func BaseOnSalePriceEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldBaseOnSalePrice, v))
}

// BaseOnSalePriceNEQ applies the NEQ predicate on the "base_on_sale_price" field.
func BaseOnSalePriceNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldBaseOnSalePrice, v))
}

// BaseOnSalePriceIsNil applies the IsNil predicate on the "base_on_sale_price" field.
func BaseOnSalePriceIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldBaseOnSalePrice))
}

// BaseOnSalePriceNotNil applies the NotNil predicate on the "base_on_sale_price" field.
func BaseOnSalePriceNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldBaseOnSalePrice))
}

// RetailPriceEQ applies the EQ predicate on the "retail_price" field.
func RetailPriceEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldRetailPrice, v))
}

// RetailPriceNEQ applies the NEQ predicate on the "retail_price" field.
func RetailPriceNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldRetailPrice, v))
}

// RetailPriceIn applies the In predicate on the "retail_price" field.
func RetailPriceIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldRetailPrice, vs...))
}

// RetailPriceNotIn applies the NotIn predicate on the "retail_price" field.
func RetailPriceNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldRetailPrice, vs...))
}

// RetailPriceGT applies the GT predicate on the "retail_price" field.
func RetailPriceGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldRetailPrice, v))
}

// RetailPriceGTE applies the GTE predicate on the "retail_price" field.
func RetailPriceGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldRetailPrice, v))
}

// RetailPriceLT applies the LT predicate on the "retail_price" field.
func RetailPriceLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldRetailPrice, v))
}

// RetailPriceLTE applies the LTE predicate on the "retail_price" field.
func RetailPriceLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldRetailPrice, v))
}

// RetailPriceIsNil applies the IsNil predicate on the "retail_price" field.
func RetailPriceIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldRetailPrice))
}

// RetailPriceNotNil applies the NotNil predicate on the "retail_price" field.
func RetailPriceNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldRetailPrice))
}

// SalePriceEQ applies the EQ predicate on the "sale_price" field.
func SalePriceEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSalePrice, v))
}

// SalePriceNEQ applies the NEQ predicate on the "sale_price" field.
func SalePriceNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSalePrice, v))
}

// SalePriceIn applies the In predicate on the "sale_price" field.
func SalePriceIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldSalePrice, vs...))
}

// SalePriceNotIn applies the NotIn predicate on the "sale_price" field.
func SalePriceNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldSalePrice, vs...))
}

// SalePriceGT applies the GT predicate on the "sale_price" field.
func SalePriceGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldSalePrice, v))
}

// SalePriceGTE applies the GTE predicate on the "sale_price" field.
func SalePriceGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldSalePrice, v))
}

// SalePriceLT applies the LT predicate on the "sale_price" field.
func SalePriceLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldSalePrice, v))
}

// SalePriceLTE applies the LTE predicate on the "sale_price" field.
func SalePriceLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldSalePrice, v))
}

// SalePriceIsNil applies the IsNil predicate on the "sale_price" field.
func SalePriceIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSalePrice))
}

// SalePriceNotNil applies the NotNil predicate on the "sale_price" field.
func SalePriceNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSalePrice))
}

// ShippingProfileIDNumEQ applies the EQ predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumNEQ applies the NEQ predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumIn applies the In predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldShippingProfileIDNum, vs...))
}

// ShippingProfileIDNumNotIn applies the NotIn predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldShippingProfileIDNum, vs...))
}

// ShippingProfileIDNumGT applies the GT predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumGTE applies the GTE predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumLT applies the LT predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumLTE applies the LTE predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldShippingProfileIDNum, v))
}

// ShippingProfileIDNumIsNil applies the IsNil predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldShippingProfileIDNum))
}

// ShippingProfileIDNumNotNil applies the NotNil predicate on the "shipping_profile_id_num" field.
func ShippingProfileIDNumNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldShippingProfileIDNum))
}

// OptimizationIDNumEQ applies the EQ predicate on the "optimization_id_num" field.
func OptimizationIDNumEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldOptimizationIDNum, v))
}

// OptimizationIDNumNEQ applies the NEQ predicate on the "optimization_id_num" field.
func OptimizationIDNumNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldOptimizationIDNum, v))
}

// OptimizationIDNumIn applies the In predicate on the "optimization_id_num" field.
func OptimizationIDNumIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldOptimizationIDNum, vs...))
}

// OptimizationIDNumNotIn applies the NotIn predicate on the "optimization_id_num" field.
func OptimizationIDNumNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldOptimizationIDNum, vs...))
}

// OptimizationIDNumGT applies the GT predicate on the "optimization_id_num" field.
func OptimizationIDNumGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldOptimizationIDNum, v))
}

// OptimizationIDNumGTE applies the GTE predicate on the "optimization_id_num" field.
func OptimizationIDNumGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldOptimizationIDNum, v))
}

// OptimizationIDNumLT applies the LT predicate on the "optimization_id_num" field.
func OptimizationIDNumLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldOptimizationIDNum, v))
}

// OptimizationIDNumLTE applies the LTE predicate on the "optimization_id_num" field.
func OptimizationIDNumLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldOptimizationIDNum, v))
}

// OptimizationIDNumIsNil applies the IsNil predicate on the "optimization_id_num" field.
func OptimizationIDNumIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldOptimizationIDNum))
}

// OptimizationIDNumNotNil applies the NotNil predicate on the "optimization_id_num" field.
func OptimizationIDNumNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldOptimizationIDNum))
}

// QtyEQ applies the EQ predicate on the "qty" field.
func QtyEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldQty, v))
}

// QtyNEQ applies the NEQ predicate on the "qty" field.
func QtyNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldQty, v))
}

// QtyIn applies the In predicate on the "qty" field.
func QtyIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldQty, vs...))
}

// QtyNotIn applies the NotIn predicate on the "qty" field.
func QtyNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldQty, vs...))
}

// QtyGT applies the GT predicate on the "qty" field.
func QtyGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldQty, v))
}

// QtyGTE applies the GTE predicate on the "qty" field.
func QtyGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldQty, v))
}

// QtyLT applies the LT predicate on the "qty" field.
func QtyLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldQty, v))
}

// QtyLTE applies the LTE predicate on the "qty" field.
func QtyLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldQty, v))
}

// QtyIsNil applies the IsNil predicate on the "qty" field.
func QtyIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldQty))
}

// QtyNotNil applies the NotNil predicate on the "qty" field.
func QtyNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldQty))
}

// MaximumOrderQtyEQ applies the EQ predicate on the "maximum_order_qty" field.
func MaximumOrderQtyEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyNEQ applies the NEQ predicate on the "maximum_order_qty" field.
func MaximumOrderQtyNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyIn applies the In predicate on the "maximum_order_qty" field.
func MaximumOrderQtyIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldMaximumOrderQty, vs...))
}

// MaximumOrderQtyNotIn applies the NotIn predicate on the "maximum_order_qty" field.
func MaximumOrderQtyNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldMaximumOrderQty, vs...))
}

// MaximumOrderQtyGT applies the GT predicate on the "maximum_order_qty" field.
func MaximumOrderQtyGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyGTE applies the GTE predicate on the "maximum_order_qty" field.
func MaximumOrderQtyGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyLT applies the LT predicate on the "maximum_order_qty" field.
func MaximumOrderQtyLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyLTE applies the LTE predicate on the "maximum_order_qty" field.
func MaximumOrderQtyLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldMaximumOrderQty, v))
}

// MaximumOrderQtyIsNil applies the IsNil predicate on the "maximum_order_qty" field.
func MaximumOrderQtyIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldMaximumOrderQty))
}

// MaximumOrderQtyNotNil applies the NotNil predicate on the "maximum_order_qty" field.
func MaximumOrderQtyNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldMaximumOrderQty))
}

// PkgWidthEQ applies the EQ predicate on the "pkg_width" field.
func PkgWidthEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgWidth, v))
}

// PkgWidthNEQ applies the NEQ predicate on the "pkg_width" field.
func PkgWidthNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPkgWidth, v))
}

// PkgWidthIn applies the In predicate on the "pkg_width" field.
func PkgWidthIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPkgWidth, vs...))
}

// PkgWidthNotIn applies the NotIn predicate on the "pkg_width" field.
func PkgWidthNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPkgWidth, vs...))
}

// PkgWidthGT applies the GT predicate on the "pkg_width" field.
func PkgWidthGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPkgWidth, v))
}

// PkgWidthGTE applies the GTE predicate on the "pkg_width" field.
func PkgWidthGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPkgWidth, v))
}

// PkgWidthLT applies the LT predicate on the "pkg_width" field.
func PkgWidthLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPkgWidth, v))
}

// PkgWidthLTE applies the LTE predicate on the "pkg_width" field.
func PkgWidthLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPkgWidth, v))
}

// PkgWidthIsNil applies the IsNil predicate on the "pkg_width" field.
func PkgWidthIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldPkgWidth))
}

// PkgWidthNotNil applies the NotNil predicate on the "pkg_width" field.
func PkgWidthNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldPkgWidth))
}

// PkgHeightEQ applies the EQ predicate on the "pkg_height" field.
func PkgHeightEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgHeight, v))
}

// PkgHeightNEQ applies the NEQ predicate on the "pkg_height" field.
func PkgHeightNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPkgHeight, v))
}

// PkgHeightIn applies the In predicate on the "pkg_height" field.
func PkgHeightIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPkgHeight, vs...))
}

// PkgHeightNotIn applies the NotIn predicate on the "pkg_height" field.
func PkgHeightNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPkgHeight, vs...))
}

// PkgHeightGT applies the GT predicate on the "pkg_height" field.
func PkgHeightGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPkgHeight, v))
}

// PkgHeightGTE applies the GTE predicate on the "pkg_height" field.
func PkgHeightGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPkgHeight, v))
}

// PkgHeightLT applies the LT predicate on the "pkg_height" field.
func PkgHeightLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPkgHeight, v))
}

// PkgHeightLTE applies the LTE predicate on the "pkg_height" field.
func PkgHeightLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPkgHeight, v))
}

// PkgHeightIsNil applies the IsNil predicate on the "pkg_height" field.
func PkgHeightIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldPkgHeight))
}

// PkgHeightNotNil applies the NotNil predicate on the "pkg_height" field.
func PkgHeightNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldPkgHeight))
}

// PkgLengthEQ applies the EQ predicate on the "pkg_length" field.
func PkgLengthEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgLength, v))
}

// PkgLengthNEQ applies the NEQ predicate on the "pkg_length" field.
func PkgLengthNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPkgLength, v))
}

// PkgLengthIn applies the In predicate on the "pkg_length" field.
func PkgLengthIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPkgLength, vs...))
}

// PkgLengthNotIn applies the NotIn predicate on the "pkg_length" field.
func PkgLengthNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPkgLength, vs...))
}

// PkgLengthGT applies the GT predicate on the "pkg_length" field.
func PkgLengthGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPkgLength, v))
}

// PkgLengthGTE applies the GTE predicate on the "pkg_length" field.
func PkgLengthGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPkgLength, v))
}

// PkgLengthLT applies the LT predicate on the "pkg_length" field.
func PkgLengthLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPkgLength, v))
}

// PkgLengthLTE applies the LTE predicate on the "pkg_length" field.
func PkgLengthLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPkgLength, v))
}

// PkgLengthIsNil applies the IsNil predicate on the "pkg_length" field.
func PkgLengthIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldPkgLength))
}

// PkgLengthNotNil applies the NotNil predicate on the "pkg_length" field.
func PkgLengthNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldPkgLength))
}

// PkgWeightEQ applies the EQ predicate on the "pkg_weight" field.
func PkgWeightEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldPkgWeight, v))
}

// PkgWeightNEQ applies the NEQ predicate on the "pkg_weight" field.
func PkgWeightNEQ(v float64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldPkgWeight, v))
}

// PkgWeightIn applies the In predicate on the "pkg_weight" field.
func PkgWeightIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldPkgWeight, vs...))
}

// PkgWeightNotIn applies the NotIn predicate on the "pkg_weight" field.
func PkgWeightNotIn(vs ...float64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldPkgWeight, vs...))
}

// PkgWeightGT applies the GT predicate on the "pkg_weight" field.
func PkgWeightGT(v float64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldPkgWeight, v))
}

// PkgWeightGTE applies the GTE predicate on the "pkg_weight" field.
func PkgWeightGTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldPkgWeight, v))
}

// PkgWeightLT applies the LT predicate on the "pkg_weight" field.
func PkgWeightLT(v float64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldPkgWeight, v))
}

// PkgWeightLTE applies the LTE predicate on the "pkg_weight" field.
func PkgWeightLTE(v float64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldPkgWeight, v))
}

// PkgWeightIsNil applies the IsNil predicate on the "pkg_weight" field.
func PkgWeightIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldPkgWeight))
}

// PkgWeightNotNil applies the NotNil predicate on the "pkg_weight" field.
func PkgWeightNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldPkgWeight))
}

// ShortDescEQ applies the EQ predicate on the "short_desc" field.
func ShortDescEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShortDesc, v))
}

// ShortDescNEQ applies the NEQ predicate on the "short_desc" field.
func ShortDescNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldShortDesc, v))
}

// ShortDescIn applies the In predicate on the "short_desc" field.
func ShortDescIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldShortDesc, vs...))
}

// ShortDescNotIn applies the NotIn predicate on the "short_desc" field.
func ShortDescNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldShortDesc, vs...))
}

// ShortDescGT applies the GT predicate on the "short_desc" field.
func ShortDescGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldShortDesc, v))
}

// ShortDescGTE applies the GTE predicate on the "short_desc" field.
func ShortDescGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldShortDesc, v))
}

// ShortDescLT applies the LT predicate on the "short_desc" field.
func ShortDescLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldShortDesc, v))
}

// ShortDescLTE applies the LTE predicate on the "short_desc" field.
func ShortDescLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldShortDesc, v))
}

// ShortDescContains applies the Contains predicate on the "short_desc" field.
func ShortDescContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldShortDesc, v))
}

// ShortDescHasPrefix applies the HasPrefix predicate on the "short_desc" field.
func ShortDescHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldShortDesc, v))
}

// ShortDescHasSuffix applies the HasSuffix predicate on the "short_desc" field.
func ShortDescHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldShortDesc, v))
}

// ShortDescIsNil applies the IsNil predicate on the "short_desc" field.
func ShortDescIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldShortDesc))
}

// ShortDescNotNil applies the NotNil predicate on the "short_desc" field.
func ShortDescNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldShortDesc))
}

// ShortDescEqualFold applies the EqualFold predicate on the "short_desc" field.
func ShortDescEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldShortDesc, v))
}

// ShortDescContainsFold applies the ContainsFold predicate on the "short_desc" field.
func ShortDescContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldShortDesc, v))
}

// DescrEQ applies the EQ predicate on the "descr" field.
func DescrEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldDescr, v))
}

// DescrNEQ applies the NEQ predicate on the "descr" field.
func DescrNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldDescr, v))
}

// DescrIn applies the In predicate on the "descr" field.
func DescrIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldDescr, vs...))
}

// DescrNotIn applies the NotIn predicate on the "descr" field.
func DescrNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldDescr, vs...))
}

// DescrGT applies the GT predicate on the "descr" field.
func DescrGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldDescr, v))
}

// DescrGTE applies the GTE predicate on the "descr" field.
func DescrGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldDescr, v))
}

// DescrLT applies the LT predicate on the "descr" field.
func DescrLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldDescr, v))
}

// DescrLTE applies the LTE predicate on the "descr" field.
func DescrLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldDescr, v))
}

// DescrContains applies the Contains predicate on the "descr" field.
func DescrContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldDescr, v))
}

// DescrHasPrefix applies the HasPrefix predicate on the "descr" field.
func DescrHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldDescr, v))
}

// DescrHasSuffix applies the HasSuffix predicate on the "descr" field.
func DescrHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldDescr, v))
}

// DescrIsNil applies the IsNil predicate on the "descr" field.
func DescrIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldDescr))
}

// DescrNotNil applies the NotNil predicate on the "descr" field.
func DescrNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldDescr))
}

// DescrEqualFold applies the EqualFold predicate on the "descr" field.
func DescrEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldDescr, v))
}

// DescrContainsFold applies the ContainsFold predicate on the "descr" field.
func DescrContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldDescr, v))
}

// ImageUrl1EQ applies the EQ predicate on the "image_url1" field.
func ImageUrl1EQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl1, v))
}

// ImageUrl1NEQ applies the NEQ predicate on the "image_url1" field.
func ImageUrl1NEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImageUrl1, v))
}

// ImageUrl1In applies the In predicate on the "image_url1" field.
func ImageUrl1In(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImageUrl1, vs...))
}

// ImageUrl1NotIn applies the NotIn predicate on the "image_url1" field.
func ImageUrl1NotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImageUrl1, vs...))
}

// ImageUrl1GT applies the GT predicate on the "image_url1" field.
func ImageUrl1GT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImageUrl1, v))
}

// ImageUrl1GTE applies the GTE predicate on the "image_url1" field.
func ImageUrl1GTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImageUrl1, v))
}

// ImageUrl1LT applies the LT predicate on the "image_url1" field.
func ImageUrl1LT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImageUrl1, v))
}

// ImageUrl1LTE applies the LTE predicate on the "image_url1" field.
func ImageUrl1LTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImageUrl1, v))
}

// ImageUrl1Contains applies the Contains predicate on the "image_url1" field.
func ImageUrl1Contains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImageUrl1, v))
}

// ImageUrl1HasPrefix applies the HasPrefix predicate on the "image_url1" field.
func ImageUrl1HasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImageUrl1, v))
}

// ImageUrl1HasSuffix applies the HasSuffix predicate on the "image_url1" field.
func ImageUrl1HasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImageUrl1, v))
}

// ImageUrl1IsNil applies the IsNil predicate on the "image_url1" field.
func ImageUrl1IsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldImageUrl1))
}

// ImageUrl1NotNil applies the NotNil predicate on the "image_url1" field.
func ImageUrl1NotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldImageUrl1))
}

// ImageUrl1EqualFold applies the EqualFold predicate on the "image_url1" field.
func ImageUrl1EqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImageUrl1, v))
}

// ImageUrl1ContainsFold applies the ContainsFold predicate on the "image_url1" field.
func ImageUrl1ContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImageUrl1, v))
}

// ImageUrl2EQ applies the EQ predicate on the "image_url2" field.
func ImageUrl2EQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl2, v))
}

// ImageUrl2NEQ applies the NEQ predicate on the "image_url2" field.
func ImageUrl2NEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImageUrl2, v))
}

// ImageUrl2In applies the In predicate on the "image_url2" field.
func ImageUrl2In(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImageUrl2, vs...))
}

// ImageUrl2NotIn applies the NotIn predicate on the "image_url2" field.
func ImageUrl2NotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImageUrl2, vs...))
}

// ImageUrl2GT applies the GT predicate on the "image_url2" field.
func ImageUrl2GT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImageUrl2, v))
}

// ImageUrl2GTE applies the GTE predicate on the "image_url2" field.
func ImageUrl2GTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImageUrl2, v))
}

// ImageUrl2LT applies the LT predicate on the "image_url2" field.
func ImageUrl2LT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImageUrl2, v))
}

// ImageUrl2LTE applies the LTE predicate on the "image_url2" field.
func ImageUrl2LTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImageUrl2, v))
}

// ImageUrl2Contains applies the Contains predicate on the "image_url2" field.
func ImageUrl2Contains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImageUrl2, v))
}

// ImageUrl2HasPrefix applies the HasPrefix predicate on the "image_url2" field.
func ImageUrl2HasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImageUrl2, v))
}

// ImageUrl2HasSuffix applies the HasSuffix predicate on the "image_url2" field.
func ImageUrl2HasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImageUrl2, v))
}

// ImageUrl2IsNil applies the IsNil predicate on the "image_url2" field.
func ImageUrl2IsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldImageUrl2))
}

// ImageUrl2NotNil applies the NotNil predicate on the "image_url2" field.
func ImageUrl2NotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldImageUrl2))
}

// ImageUrl2EqualFold applies the EqualFold predicate on the "image_url2" field.
func ImageUrl2EqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImageUrl2, v))
}

// ImageUrl2ContainsFold applies the ContainsFold predicate on the "image_url2" field.
func ImageUrl2ContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImageUrl2, v))
}

// ImageUrl3EQ applies the EQ predicate on the "image_url3" field.
func ImageUrl3EQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl3, v))
}

// ImageUrl3NEQ applies the NEQ predicate on the "image_url3" field.
func ImageUrl3NEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImageUrl3, v))
}

// ImageUrl3In applies the In predicate on the "image_url3" field.
func ImageUrl3In(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImageUrl3, vs...))
}

// ImageUrl3NotIn applies the NotIn predicate on the "image_url3" field.
func ImageUrl3NotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImageUrl3, vs...))
}

// ImageUrl3GT applies the GT predicate on the "image_url3" field.
func ImageUrl3GT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImageUrl3, v))
}

// ImageUrl3GTE applies the GTE predicate on the "image_url3" field.
func ImageUrl3GTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImageUrl3, v))
}

// ImageUrl3LT applies the LT predicate on the "image_url3" field.
func ImageUrl3LT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImageUrl3, v))
}

// ImageUrl3LTE applies the LTE predicate on the "image_url3" field.
func ImageUrl3LTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImageUrl3, v))
}

// ImageUrl3Contains applies the Contains predicate on the "image_url3" field.
func ImageUrl3Contains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImageUrl3, v))
}

// ImageUrl3HasPrefix applies the HasPrefix predicate on the "image_url3" field.
func ImageUrl3HasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImageUrl3, v))
}

// ImageUrl3HasSuffix applies the HasSuffix predicate on the "image_url3" field.
func ImageUrl3HasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImageUrl3, v))
}

// ImageUrl3IsNil applies the IsNil predicate on the "image_url3" field.
func ImageUrl3IsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldImageUrl3))
}

// ImageUrl3NotNil applies the NotNil predicate on the "image_url3" field.
func ImageUrl3NotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldImageUrl3))
}

// ImageUrl3EqualFold applies the EqualFold predicate on the "image_url3" field.
func ImageUrl3EqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImageUrl3, v))
}

// ImageUrl3ContainsFold applies the ContainsFold predicate on the "image_url3" field.
func ImageUrl3ContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImageUrl3, v))
}

// ImageUrl4EQ applies the EQ predicate on the "image_url4" field.
func ImageUrl4EQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl4, v))
}

// ImageUrl4NEQ applies the NEQ predicate on the "image_url4" field.
func ImageUrl4NEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImageUrl4, v))
}

// ImageUrl4In applies the In predicate on the "image_url4" field.
func ImageUrl4In(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImageUrl4, vs...))
}

// ImageUrl4NotIn applies the NotIn predicate on the "image_url4" field.
func ImageUrl4NotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImageUrl4, vs...))
}

// ImageUrl4GT applies the GT predicate on the "image_url4" field.
func ImageUrl4GT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImageUrl4, v))
}

// ImageUrl4GTE applies the GTE predicate on the "image_url4" field.
func ImageUrl4GTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImageUrl4, v))
}

// ImageUrl4LT applies the LT predicate on the "image_url4" field.
func ImageUrl4LT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImageUrl4, v))
}

// ImageUrl4LTE applies the LTE predicate on the "image_url4" field.
func ImageUrl4LTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImageUrl4, v))
}

// ImageUrl4Contains applies the Contains predicate on the "image_url4" field.
func ImageUrl4Contains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImageUrl4, v))
}

// ImageUrl4HasPrefix applies the HasPrefix predicate on the "image_url4" field.
func ImageUrl4HasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImageUrl4, v))
}

// ImageUrl4HasSuffix applies the HasSuffix predicate on the "image_url4" field.
func ImageUrl4HasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImageUrl4, v))
}

// ImageUrl4IsNil applies the IsNil predicate on the "image_url4" field.
func ImageUrl4IsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldImageUrl4))
}

// ImageUrl4NotNil applies the NotNil predicate on the "image_url4" field.
func ImageUrl4NotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldImageUrl4))
}

// ImageUrl4EqualFold applies the EqualFold predicate on the "image_url4" field.
func ImageUrl4EqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImageUrl4, v))
}

// ImageUrl4ContainsFold applies the ContainsFold predicate on the "image_url4" field.
func ImageUrl4ContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImageUrl4, v))
}

// ImageUrl5EQ applies the EQ predicate on the "image_url5" field.
func ImageUrl5EQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldImageUrl5, v))
}

// ImageUrl5NEQ applies the NEQ predicate on the "image_url5" field.
func ImageUrl5NEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldImageUrl5, v))
}

// ImageUrl5In applies the In predicate on the "image_url5" field.
func ImageUrl5In(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldImageUrl5, vs...))
}

// ImageUrl5NotIn applies the NotIn predicate on the "image_url5" field.
func ImageUrl5NotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldImageUrl5, vs...))
}

// ImageUrl5GT applies the GT predicate on the "image_url5" field.
func ImageUrl5GT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldImageUrl5, v))
}

// ImageUrl5GTE applies the GTE predicate on the "image_url5" field.
func ImageUrl5GTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldImageUrl5, v))
}

// ImageUrl5LT applies the LT predicate on the "image_url5" field.
func ImageUrl5LT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldImageUrl5, v))
}

// ImageUrl5LTE applies the LTE predicate on the "image_url5" field.
func ImageUrl5LTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldImageUrl5, v))
}

// ImageUrl5Contains applies the Contains predicate on the "image_url5" field.
func ImageUrl5Contains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldImageUrl5, v))
}

// ImageUrl5HasPrefix applies the HasPrefix predicate on the "image_url5" field.
func ImageUrl5HasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldImageUrl5, v))
}

// ImageUrl5HasSuffix applies the HasSuffix predicate on the "image_url5" field.
func ImageUrl5HasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldImageUrl5, v))
}

// ImageUrl5IsNil applies the IsNil predicate on the "image_url5" field.
func ImageUrl5IsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldImageUrl5))
}

// ImageUrl5NotNil applies the NotNil predicate on the "image_url5" field.
func ImageUrl5NotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldImageUrl5))
}

// ImageUrl5EqualFold applies the EqualFold predicate on the "image_url5" field.
func ImageUrl5EqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldImageUrl5, v))
}

// ImageUrl5ContainsFold applies the ContainsFold predicate on the "image_url5" field.
func ImageUrl5ContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldImageUrl5, v))
}

// ConditionEQ applies the EQ predicate on the "condition" field.
func ConditionEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldCondition, v))
}

// ConditionNEQ applies the NEQ predicate on the "condition" field.
func ConditionNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldCondition, v))
}

// ConditionIn applies the In predicate on the "condition" field.
func ConditionIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldCondition, vs...))
}

// ConditionNotIn applies the NotIn predicate on the "condition" field.
func ConditionNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldCondition, vs...))
}

// ConditionGT applies the GT predicate on the "condition" field.
func ConditionGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldCondition, v))
}

// ConditionGTE applies the GTE predicate on the "condition" field.
func ConditionGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldCondition, v))
}

// ConditionLT applies the LT predicate on the "condition" field.
func ConditionLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldCondition, v))
}

// ConditionLTE applies the LTE predicate on the "condition" field.
func ConditionLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldCondition, v))
}

// ConditionContains applies the Contains predicate on the "condition" field.
func ConditionContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldCondition, v))
}

// ConditionHasPrefix applies the HasPrefix predicate on the "condition" field.
func ConditionHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldCondition, v))
}

// ConditionHasSuffix applies the HasSuffix predicate on the "condition" field.
func ConditionHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldCondition, v))
}

// ConditionIsNil applies the IsNil predicate on the "condition" field.
func ConditionIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldCondition))
}

// ConditionNotNil applies the NotNil predicate on the "condition" field.
func ConditionNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldCondition))
}

// ConditionEqualFold applies the EqualFold predicate on the "condition" field.
func ConditionEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldCondition, v))
}

// ConditionContainsFold applies the ContainsFold predicate on the "condition" field.
func ConditionContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldCondition, v))
}

// BrandEQ applies the EQ predicate on the "brand" field.
func BrandEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldBrand, v))
}

// BrandNEQ applies the NEQ predicate on the "brand" field.
func BrandNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldBrand, v))
}

// BrandIn applies the In predicate on the "brand" field.
func BrandIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldBrand, vs...))
}

// BrandNotIn applies the NotIn predicate on the "brand" field.
func BrandNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldBrand, vs...))
}

// BrandGT applies the GT predicate on the "brand" field.
func BrandGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldBrand, v))
}

// BrandGTE applies the GTE predicate on the "brand" field.
func BrandGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldBrand, v))
}

// BrandLT applies the LT predicate on the "brand" field.
func BrandLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldBrand, v))
}

// BrandLTE applies the LTE predicate on the "brand" field.
func BrandLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldBrand, v))
}

// BrandContains applies the Contains predicate on the "brand" field.
func BrandContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldBrand, v))
}

// BrandHasPrefix applies the HasPrefix predicate on the "brand" field.
func BrandHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldBrand, v))
}

// BrandHasSuffix applies the HasSuffix predicate on the "brand" field.
func BrandHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldBrand, v))
}

// BrandIsNil applies the IsNil predicate on the "brand" field.
func BrandIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldBrand))
}

// BrandNotNil applies the NotNil predicate on the "brand" field.
func BrandNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldBrand))
}

// BrandEqualFold applies the EqualFold predicate on the "brand" field.
func BrandEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldBrand, v))
}

// BrandContainsFold applies the ContainsFold predicate on the "brand" field.
func BrandContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldBrand, v))
}

// GenderEQ applies the EQ predicate on the "gender" field.
func GenderEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "gender" field.
func GenderNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "gender" field.
func GenderIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "gender" field.
func GenderNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldGender, vs...))
}

// GenderGT applies the GT predicate on the "gender" field.
func GenderGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldGender, v))
}

// GenderGTE applies the GTE predicate on the "gender" field.
func GenderGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldGender, v))
}

// GenderLT applies the LT predicate on the "gender" field.
func GenderLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldGender, v))
}

// GenderLTE applies the LTE predicate on the "gender" field.
func GenderLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldGender, v))
}

// GenderContains applies the Contains predicate on the "gender" field.
func GenderContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldGender, v))
}

// GenderHasPrefix applies the HasPrefix predicate on the "gender" field.
func GenderHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldGender, v))
}

// GenderHasSuffix applies the HasSuffix predicate on the "gender" field.
func GenderHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldGender, v))
}

// GenderIsNil applies the IsNil predicate on the "gender" field.
func GenderIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldGender))
}

// GenderNotNil applies the NotNil predicate on the "gender" field.
func GenderNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldGender))
}

// GenderEqualFold applies the EqualFold predicate on the "gender" field.
func GenderEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldGender, v))
}

// GenderContainsFold applies the ContainsFold predicate on the "gender" field.
func GenderContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldGender, v))
}

// AgeGroupEQ applies the EQ predicate on the "age_group" field.
func AgeGroupEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldAgeGroup, v))
}

// AgeGroupNEQ applies the NEQ predicate on the "age_group" field.
func AgeGroupNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldAgeGroup, v))
}

// AgeGroupIn applies the In predicate on the "age_group" field.
func AgeGroupIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldAgeGroup, vs...))
}

// AgeGroupNotIn applies the NotIn predicate on the "age_group" field.
func AgeGroupNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldAgeGroup, vs...))
}

// AgeGroupGT applies the GT predicate on the "age_group" field.
func AgeGroupGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldAgeGroup, v))
}

// AgeGroupGTE applies the GTE predicate on the "age_group" field.
func AgeGroupGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldAgeGroup, v))
}

// AgeGroupLT applies the LT predicate on the "age_group" field.
func AgeGroupLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldAgeGroup, v))
}

// AgeGroupLTE applies the LTE predicate on the "age_group" field.
func AgeGroupLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldAgeGroup, v))
}

// AgeGroupContains applies the Contains predicate on the "age_group" field.
func AgeGroupContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldAgeGroup, v))
}

// AgeGroupHasPrefix applies the HasPrefix predicate on the "age_group" field.
func AgeGroupHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldAgeGroup, v))
}

// AgeGroupHasSuffix applies the HasSuffix predicate on the "age_group" field.
func AgeGroupHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldAgeGroup, v))
}

// AgeGroupIsNil applies the IsNil predicate on the "age_group" field.
func AgeGroupIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldAgeGroup))
}

// AgeGroupNotNil applies the NotNil predicate on the "age_group" field.
func AgeGroupNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldAgeGroup))
}

// AgeGroupEqualFold applies the EqualFold predicate on the "age_group" field.
func AgeGroupEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldAgeGroup, v))
}

// AgeGroupContainsFold applies the ContainsFold predicate on the "age_group" field.
func AgeGroupContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldAgeGroup, v))
}

// ColorEQ applies the EQ predicate on the "color" field.
func ColorEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldColor, v))
}

// ColorNEQ applies the NEQ predicate on the "color" field.
func ColorNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldColor, v))
}

// ColorIn applies the In predicate on the "color" field.
func ColorIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldColor, vs...))
}

// ColorNotIn applies the NotIn predicate on the "color" field.
func ColorNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldColor, vs...))
}

// ColorGT applies the GT predicate on the "color" field.
func ColorGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldColor, v))
}

// ColorGTE applies the GTE predicate on the "color" field.
func ColorGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldColor, v))
}

// ColorLT applies the LT predicate on the "color" field.
func ColorLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldColor, v))
}

// ColorLTE applies the LTE predicate on the "color" field.
func ColorLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldColor, v))
}

// ColorContains applies the Contains predicate on the "color" field.
func ColorContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldColor, v))
}

// ColorHasPrefix applies the HasPrefix predicate on the "color" field.
func ColorHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldColor, v))
}

// ColorHasSuffix applies the HasSuffix predicate on the "color" field.
func ColorHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldColor, v))
}

// ColorIsNil applies the IsNil predicate on the "color" field.
func ColorIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldColor))
}

// ColorNotNil applies the NotNil predicate on the "color" field.
func ColorNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldColor))
}

// ColorEqualFold applies the EqualFold predicate on the "color" field.
func ColorEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldColor, v))
}

// ColorContainsFold applies the ContainsFold predicate on the "color" field.
func ColorContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldColor, v))
}

// SizeEQ applies the EQ predicate on the "size" field.
func SizeEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSize, v))
}

// SizeNEQ applies the NEQ predicate on the "size" field.
func SizeNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSize, v))
}

// SizeIn applies the In predicate on the "size" field.
func SizeIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldSize, vs...))
}

// SizeNotIn applies the NotIn predicate on the "size" field.
func SizeNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldSize, vs...))
}

// SizeGT applies the GT predicate on the "size" field.
func SizeGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldSize, v))
}

// SizeGTE applies the GTE predicate on the "size" field.
func SizeGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldSize, v))
}

// SizeLT applies the LT predicate on the "size" field.
func SizeLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldSize, v))
}

// SizeLTE applies the LTE predicate on the "size" field.
func SizeLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldSize, v))
}

// SizeContains applies the Contains predicate on the "size" field.
func SizeContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldSize, v))
}

// SizeHasPrefix applies the HasPrefix predicate on the "size" field.
func SizeHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldSize, v))
}

// SizeHasSuffix applies the HasSuffix predicate on the "size" field.
func SizeHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldSize, v))
}

// SizeIsNil applies the IsNil predicate on the "size" field.
func SizeIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSize))
}

// SizeNotNil applies the NotNil predicate on the "size" field.
func SizeNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSize))
}

// SizeEqualFold applies the EqualFold predicate on the "size" field.
func SizeEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldSize, v))
}

// SizeContainsFold applies the ContainsFold predicate on the "size" field.
func SizeContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldSize, v))
}

// UxmItemIDNumEQ applies the EQ predicate on the "uxm_item_id_num" field.
func UxmItemIDNumEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUxmItemIDNum, v))
}

// UxmItemIDNumNEQ applies the NEQ predicate on the "uxm_item_id_num" field.
func UxmItemIDNumNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldUxmItemIDNum, v))
}

// UxmItemIDNumIn applies the In predicate on the "uxm_item_id_num" field.
func UxmItemIDNumIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldUxmItemIDNum, vs...))
}

// UxmItemIDNumNotIn applies the NotIn predicate on the "uxm_item_id_num" field.
func UxmItemIDNumNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldUxmItemIDNum, vs...))
}

// UxmItemIDNumGT applies the GT predicate on the "uxm_item_id_num" field.
func UxmItemIDNumGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldUxmItemIDNum, v))
}

// UxmItemIDNumGTE applies the GTE predicate on the "uxm_item_id_num" field.
func UxmItemIDNumGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldUxmItemIDNum, v))
}

// UxmItemIDNumLT applies the LT predicate on the "uxm_item_id_num" field.
func UxmItemIDNumLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldUxmItemIDNum, v))
}

// UxmItemIDNumLTE applies the LTE predicate on the "uxm_item_id_num" field.
func UxmItemIDNumLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldUxmItemIDNum, v))
}

// UxmItemIDNumIsNil applies the IsNil predicate on the "uxm_item_id_num" field.
func UxmItemIDNumIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldUxmItemIDNum))
}

// UxmItemIDNumNotNil applies the NotNil predicate on the "uxm_item_id_num" field.
func UxmItemIDNumNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldUxmItemIDNum))
}

// SentEQ applies the EQ predicate on the "sent" field.
func SentEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSent, v))
}

// SentNEQ applies the NEQ predicate on the "sent" field.
func SentNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSent, v))
}

// SentIsNil applies the IsNil predicate on the "sent" field.
func SentIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSent))
}

// SentNotNil applies the NotNil predicate on the "sent" field.
func SentNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSent))
}

// SentAtEQ applies the EQ predicate on the "sent_at" field.
func SentAtEQ(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSentAt, v))
}

// SentAtNEQ applies the NEQ predicate on the "sent_at" field.
func SentAtNEQ(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSentAt, v))
}

// SentAtIn applies the In predicate on the "sent_at" field.
func SentAtIn(vs ...time.Time) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldSentAt, vs...))
}

// SentAtNotIn applies the NotIn predicate on the "sent_at" field.
func SentAtNotIn(vs ...time.Time) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldSentAt, vs...))
}

// SentAtGT applies the GT predicate on the "sent_at" field.
func SentAtGT(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldSentAt, v))
}

// SentAtGTE applies the GTE predicate on the "sent_at" field.
func SentAtGTE(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldSentAt, v))
}

// SentAtLT applies the LT predicate on the "sent_at" field.
func SentAtLT(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldSentAt, v))
}

// SentAtLTE applies the LTE predicate on the "sent_at" field.
func SentAtLTE(v time.Time) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldSentAt, v))
}

// SentAtIsNil applies the IsNil predicate on the "sent_at" field.
func SentAtIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSentAt))
}

// SentAtNotNil applies the NotNil predicate on the "sent_at" field.
func SentAtNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSentAt))
}

// HasErrorEQ applies the EQ predicate on the "has_error" field.
func HasErrorEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldHasError, v))
}

// HasErrorNEQ applies the NEQ predicate on the "has_error" field.
func HasErrorNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldHasError, v))
}

// HasErrorIsNil applies the IsNil predicate on the "has_error" field.
func HasErrorIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldHasError))
}

// HasErrorNotNil applies the NotNil predicate on the "has_error" field.
func HasErrorNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldHasError))
}

// LastLogIDEQ applies the EQ predicate on the "last_log_id" field.
func LastLogIDEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldLastLogID, v))
}

// LastLogIDNEQ applies the NEQ predicate on the "last_log_id" field.
func LastLogIDNEQ(v int64) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldLastLogID, v))
}

// LastLogIDIn applies the In predicate on the "last_log_id" field.
func LastLogIDIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldLastLogID, vs...))
}

// LastLogIDNotIn applies the NotIn predicate on the "last_log_id" field.
func LastLogIDNotIn(vs ...int64) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldLastLogID, vs...))
}

// LastLogIDGT applies the GT predicate on the "last_log_id" field.
func LastLogIDGT(v int64) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldLastLogID, v))
}

// LastLogIDGTE applies the GTE predicate on the "last_log_id" field.
func LastLogIDGTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldLastLogID, v))
}

// LastLogIDLT applies the LT predicate on the "last_log_id" field.
func LastLogIDLT(v int64) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldLastLogID, v))
}

// LastLogIDLTE applies the LTE predicate on the "last_log_id" field.
func LastLogIDLTE(v int64) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldLastLogID, v))
}

// LastLogIDIsNil applies the IsNil predicate on the "last_log_id" field.
func LastLogIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldLastLogID))
}

// LastLogIDNotNil applies the NotNil predicate on the "last_log_id" field.
func LastLogIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldLastLogID))
}

// FeedResponseEQ applies the EQ predicate on the "feed_response" field.
func FeedResponseEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldFeedResponse, v))
}

// FeedResponseNEQ applies the NEQ predicate on the "feed_response" field.
func FeedResponseNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldFeedResponse, v))
}

// FeedResponseIn applies the In predicate on the "feed_response" field.
func FeedResponseIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldFeedResponse, vs...))
}

// FeedResponseNotIn applies the NotIn predicate on the "feed_response" field.
func FeedResponseNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldFeedResponse, vs...))
}

// FeedResponseGT applies the GT predicate on the "feed_response" field.
func FeedResponseGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldFeedResponse, v))
}

// FeedResponseGTE applies the GTE predicate on the "feed_response" field.
func FeedResponseGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldFeedResponse, v))
}

// FeedResponseLT applies the LT predicate on the "feed_response" field.
func FeedResponseLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldFeedResponse, v))
}

// FeedResponseLTE applies the LTE predicate on the "feed_response" field.
func FeedResponseLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldFeedResponse, v))
}

// FeedResponseContains applies the Contains predicate on the "feed_response" field.
func FeedResponseContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldFeedResponse, v))
}

// FeedResponseHasPrefix applies the HasPrefix predicate on the "feed_response" field.
func FeedResponseHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldFeedResponse, v))
}

// FeedResponseHasSuffix applies the HasSuffix predicate on the "feed_response" field.
func FeedResponseHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldFeedResponse, v))
}

// FeedResponseIsNil applies the IsNil predicate on the "feed_response" field.
func FeedResponseIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldFeedResponse))
}

// FeedResponseNotNil applies the NotNil predicate on the "feed_response" field.
func FeedResponseNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldFeedResponse))
}

// FeedResponseEqualFold applies the EqualFold predicate on the "feed_response" field.
func FeedResponseEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldFeedResponse, v))
}

// FeedResponseContainsFold applies the ContainsFold predicate on the "feed_response" field.
func FeedResponseContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldFeedResponse, v))
}

// KeywordsEQ applies the EQ predicate on the "keywords" field.
func KeywordsEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldKeywords, v))
}

// KeywordsNEQ applies the NEQ predicate on the "keywords" field.
func KeywordsNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldKeywords, v))
}

// KeywordsIn applies the In predicate on the "keywords" field.
func KeywordsIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldKeywords, vs...))
}

// KeywordsNotIn applies the NotIn predicate on the "keywords" field.
func KeywordsNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldKeywords, vs...))
}

// KeywordsGT applies the GT predicate on the "keywords" field.
func KeywordsGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldKeywords, v))
}

// KeywordsGTE applies the GTE predicate on the "keywords" field.
func KeywordsGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldKeywords, v))
}

// KeywordsLT applies the LT predicate on the "keywords" field.
func KeywordsLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldKeywords, v))
}

// KeywordsLTE applies the LTE predicate on the "keywords" field.
func KeywordsLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldKeywords, v))
}

// KeywordsContains applies the Contains predicate on the "keywords" field.
func KeywordsContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldKeywords, v))
}

// KeywordsHasPrefix applies the HasPrefix predicate on the "keywords" field.
func KeywordsHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldKeywords, v))
}

// KeywordsHasSuffix applies the HasSuffix predicate on the "keywords" field.
func KeywordsHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldKeywords, v))
}

// KeywordsIsNil applies the IsNil predicate on the "keywords" field.
func KeywordsIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldKeywords))
}

// KeywordsNotNil applies the NotNil predicate on the "keywords" field.
func KeywordsNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldKeywords))
}

// KeywordsEqualFold applies the EqualFold predicate on the "keywords" field.
func KeywordsEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldKeywords, v))
}

// KeywordsContainsFold applies the ContainsFold predicate on the "keywords" field.
func KeywordsContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldKeywords, v))
}

// SyncEQ applies the EQ predicate on the "sync" field.
func SyncEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldSync, v))
}

// SyncNEQ applies the NEQ predicate on the "sync" field.
func SyncNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldSync, v))
}

// SyncIsNil applies the IsNil predicate on the "sync" field.
func SyncIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldSync))
}

// SyncNotNil applies the NotNil predicate on the "sync" field.
func SyncNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldSync))
}

// UserIDEQ applies the EQ predicate on the "user_id" field.
func UserIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUserID, v))
}

// UserIDNEQ applies the NEQ predicate on the "user_id" field.
func UserIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldUserID, v))
}

// UserIDIn applies the In predicate on the "user_id" field.
func UserIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldUserID, vs...))
}

// UserIDNotIn applies the NotIn predicate on the "user_id" field.
func UserIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldUserID, vs...))
}

// UserIDGT applies the GT predicate on the "user_id" field.
func UserIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldUserID, v))
}

// UserIDGTE applies the GTE predicate on the "user_id" field.
func UserIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldUserID, v))
}

// UserIDLT applies the LT predicate on the "user_id" field.
func UserIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldUserID, v))
}

// UserIDLTE applies the LTE predicate on the "user_id" field.
func UserIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldUserID, v))
}

// UserIDContains applies the Contains predicate on the "user_id" field.
func UserIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldUserID, v))
}

// UserIDHasPrefix applies the HasPrefix predicate on the "user_id" field.
func UserIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldUserID, v))
}

// UserIDHasSuffix applies the HasSuffix predicate on the "user_id" field.
func UserIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldUserID, v))
}

// UserIDIsNil applies the IsNil predicate on the "user_id" field.
func UserIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldUserID))
}

// UserIDNotNil applies the NotNil predicate on the "user_id" field.
func UserIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldUserID))
}

// UserIDEqualFold applies the EqualFold predicate on the "user_id" field.
func UserIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldUserID, v))
}

// UserIDContainsFold applies the ContainsFold predicate on the "user_id" field.
func UserIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldUserID, v))
}

// ShippingProfileIDEQ applies the EQ predicate on the "shipping_profile_id" field.
func ShippingProfileIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldShippingProfileID, v))
}

// ShippingProfileIDNEQ applies the NEQ predicate on the "shipping_profile_id" field.
func ShippingProfileIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldShippingProfileID, v))
}

// ShippingProfileIDIn applies the In predicate on the "shipping_profile_id" field.
func ShippingProfileIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldShippingProfileID, vs...))
}

// ShippingProfileIDNotIn applies the NotIn predicate on the "shipping_profile_id" field.
func ShippingProfileIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldShippingProfileID, vs...))
}

// ShippingProfileIDGT applies the GT predicate on the "shipping_profile_id" field.
func ShippingProfileIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldShippingProfileID, v))
}

// ShippingProfileIDGTE applies the GTE predicate on the "shipping_profile_id" field.
func ShippingProfileIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldShippingProfileID, v))
}

// ShippingProfileIDLT applies the LT predicate on the "shipping_profile_id" field.
func ShippingProfileIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldShippingProfileID, v))
}

// ShippingProfileIDLTE applies the LTE predicate on the "shipping_profile_id" field.
func ShippingProfileIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldShippingProfileID, v))
}

// ShippingProfileIDContains applies the Contains predicate on the "shipping_profile_id" field.
func ShippingProfileIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldShippingProfileID, v))
}

// ShippingProfileIDHasPrefix applies the HasPrefix predicate on the "shipping_profile_id" field.
func ShippingProfileIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldShippingProfileID, v))
}

// ShippingProfileIDHasSuffix applies the HasSuffix predicate on the "shipping_profile_id" field.
func ShippingProfileIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldShippingProfileID, v))
}

// ShippingProfileIDIsNil applies the IsNil predicate on the "shipping_profile_id" field.
func ShippingProfileIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldShippingProfileID))
}

// ShippingProfileIDNotNil applies the NotNil predicate on the "shipping_profile_id" field.
func ShippingProfileIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldShippingProfileID))
}

// ShippingProfileIDEqualFold applies the EqualFold predicate on the "shipping_profile_id" field.
func ShippingProfileIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldShippingProfileID, v))
}

// ShippingProfileIDContainsFold applies the ContainsFold predicate on the "shipping_profile_id" field.
func ShippingProfileIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldShippingProfileID, v))
}

// OptimizationIDEQ applies the EQ predicate on the "optimization_id" field.
func OptimizationIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldOptimizationID, v))
}

// OptimizationIDNEQ applies the NEQ predicate on the "optimization_id" field.
func OptimizationIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldOptimizationID, v))
}

// OptimizationIDIn applies the In predicate on the "optimization_id" field.
func OptimizationIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldOptimizationID, vs...))
}

// OptimizationIDNotIn applies the NotIn predicate on the "optimization_id" field.
func OptimizationIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldOptimizationID, vs...))
}

// OptimizationIDGT applies the GT predicate on the "optimization_id" field.
func OptimizationIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldOptimizationID, v))
}

// OptimizationIDGTE applies the GTE predicate on the "optimization_id" field.
func OptimizationIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldOptimizationID, v))
}

// OptimizationIDLT applies the LT predicate on the "optimization_id" field.
func OptimizationIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldOptimizationID, v))
}

// OptimizationIDLTE applies the LTE predicate on the "optimization_id" field.
func OptimizationIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldOptimizationID, v))
}

// OptimizationIDContains applies the Contains predicate on the "optimization_id" field.
func OptimizationIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldOptimizationID, v))
}

// OptimizationIDHasPrefix applies the HasPrefix predicate on the "optimization_id" field.
func OptimizationIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldOptimizationID, v))
}

// OptimizationIDHasSuffix applies the HasSuffix predicate on the "optimization_id" field.
func OptimizationIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldOptimizationID, v))
}

// OptimizationIDIsNil applies the IsNil predicate on the "optimization_id" field.
func OptimizationIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldOptimizationID))
}

// OptimizationIDNotNil applies the NotNil predicate on the "optimization_id" field.
func OptimizationIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldOptimizationID))
}

// OptimizationIDEqualFold applies the EqualFold predicate on the "optimization_id" field.
func OptimizationIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldOptimizationID, v))
}

// OptimizationIDContainsFold applies the ContainsFold predicate on the "optimization_id" field.
func OptimizationIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldOptimizationID, v))
}

// UxmItemIDEQ applies the EQ predicate on the "uxm_item_id" field.
func UxmItemIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUxmItemID, v))
}

// UxmItemIDNEQ applies the NEQ predicate on the "uxm_item_id" field.
func UxmItemIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldUxmItemID, v))
}

// UxmItemIDIn applies the In predicate on the "uxm_item_id" field.
func UxmItemIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldUxmItemID, vs...))
}

// UxmItemIDNotIn applies the NotIn predicate on the "uxm_item_id" field.
func UxmItemIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldUxmItemID, vs...))
}

// UxmItemIDGT applies the GT predicate on the "uxm_item_id" field.
func UxmItemIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldUxmItemID, v))
}

// UxmItemIDGTE applies the GTE predicate on the "uxm_item_id" field.
func UxmItemIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldUxmItemID, v))
}

// UxmItemIDLT applies the LT predicate on the "uxm_item_id" field.
func UxmItemIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldUxmItemID, v))
}

// UxmItemIDLTE applies the LTE predicate on the "uxm_item_id" field.
func UxmItemIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldUxmItemID, v))
}

// UxmItemIDContains applies the Contains predicate on the "uxm_item_id" field.
func UxmItemIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldUxmItemID, v))
}

// UxmItemIDHasPrefix applies the HasPrefix predicate on the "uxm_item_id" field.
func UxmItemIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldUxmItemID, v))
}

// UxmItemIDHasSuffix applies the HasSuffix predicate on the "uxm_item_id" field.
func UxmItemIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldUxmItemID, v))
}

// UxmItemIDIsNil applies the IsNil predicate on the "uxm_item_id" field.
func UxmItemIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldUxmItemID))
}

// UxmItemIDNotNil applies the NotNil predicate on the "uxm_item_id" field.
func UxmItemIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldUxmItemID))
}

// UxmItemIDEqualFold applies the EqualFold predicate on the "uxm_item_id" field.
func UxmItemIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldUxmItemID, v))
}

// UxmItemIDContainsFold applies the ContainsFold predicate on the "uxm_item_id" field.
func UxmItemIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldUxmItemID, v))
}

// ParentIDEQ applies the EQ predicate on the "parent_id" field.
func ParentIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldParentID, v))
}

// ParentIDNEQ applies the NEQ predicate on the "parent_id" field.
func ParentIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldParentID, v))
}

// ParentIDIn applies the In predicate on the "parent_id" field.
func ParentIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldParentID, vs...))
}

// ParentIDNotIn applies the NotIn predicate on the "parent_id" field.
func ParentIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldParentID, vs...))
}

// ParentIDGT applies the GT predicate on the "parent_id" field.
func ParentIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldParentID, v))
}

// ParentIDGTE applies the GTE predicate on the "parent_id" field.
func ParentIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldParentID, v))
}

// ParentIDLT applies the LT predicate on the "parent_id" field.
func ParentIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldParentID, v))
}

// ParentIDLTE applies the LTE predicate on the "parent_id" field.
func ParentIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldParentID, v))
}

// ParentIDContains applies the Contains predicate on the "parent_id" field.
func ParentIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldParentID, v))
}

// ParentIDHasPrefix applies the HasPrefix predicate on the "parent_id" field.
func ParentIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldParentID, v))
}

// ParentIDHasSuffix applies the HasSuffix predicate on the "parent_id" field.
func ParentIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldParentID, v))
}

// ParentIDIsNil applies the IsNil predicate on the "parent_id" field.
func ParentIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldParentID))
}

// ParentIDNotNil applies the NotNil predicate on the "parent_id" field.
func ParentIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldParentID))
}

// ParentIDEqualFold applies the EqualFold predicate on the "parent_id" field.
func ParentIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldParentID, v))
}

// ParentIDContainsFold applies the ContainsFold predicate on the "parent_id" field.
func ParentIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldParentID, v))
}

// ItemTypeIDEQ applies the EQ predicate on the "item_type_id" field.
func ItemTypeIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldItemTypeID, v))
}

// ItemTypeIDNEQ applies the NEQ predicate on the "item_type_id" field.
func ItemTypeIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldItemTypeID, v))
}

// ItemTypeIDIn applies the In predicate on the "item_type_id" field.
func ItemTypeIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldItemTypeID, vs...))
}

// ItemTypeIDNotIn applies the NotIn predicate on the "item_type_id" field.
func ItemTypeIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldItemTypeID, vs...))
}

// ItemTypeIDGT applies the GT predicate on the "item_type_id" field.
func ItemTypeIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldItemTypeID, v))
}

// ItemTypeIDGTE applies the GTE predicate on the "item_type_id" field.
func ItemTypeIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldItemTypeID, v))
}

// ItemTypeIDLT applies the LT predicate on the "item_type_id" field.
func ItemTypeIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldItemTypeID, v))
}

// ItemTypeIDLTE applies the LTE predicate on the "item_type_id" field.
func ItemTypeIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldItemTypeID, v))
}

// ItemTypeIDContains applies the Contains predicate on the "item_type_id" field.
func ItemTypeIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldItemTypeID, v))
}

// ItemTypeIDHasPrefix applies the HasPrefix predicate on the "item_type_id" field.
func ItemTypeIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldItemTypeID, v))
}

// ItemTypeIDHasSuffix applies the HasSuffix predicate on the "item_type_id" field.
func ItemTypeIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldItemTypeID, v))
}

// ItemTypeIDIsNil applies the IsNil predicate on the "item_type_id" field.
func ItemTypeIDIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldItemTypeID))
}

// ItemTypeIDNotNil applies the NotNil predicate on the "item_type_id" field.
func ItemTypeIDNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldItemTypeID))
}

// ItemTypeIDEqualFold applies the EqualFold predicate on the "item_type_id" field.
func ItemTypeIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldItemTypeID, v))
}

// ItemTypeIDContainsFold applies the ContainsFold predicate on the "item_type_id" field.
func ItemTypeIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldItemTypeID, v))
}

// UIDEQ applies the EQ predicate on the "uid" field.
func UIDEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldUID, v))
}

// UIDNEQ applies the NEQ predicate on the "uid" field.
func UIDNEQ(v string) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldUID, v))
}

// UIDIn applies the In predicate on the "uid" field.
func UIDIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldIn(FieldUID, vs...))
}

// UIDNotIn applies the NotIn predicate on the "uid" field.
func UIDNotIn(vs ...string) predicate.Item {
	return predicate.Item(sql.FieldNotIn(FieldUID, vs...))
}

// UIDGT applies the GT predicate on the "uid" field.
func UIDGT(v string) predicate.Item {
	return predicate.Item(sql.FieldGT(FieldUID, v))
}

// UIDGTE applies the GTE predicate on the "uid" field.
func UIDGTE(v string) predicate.Item {
	return predicate.Item(sql.FieldGTE(FieldUID, v))
}

// UIDLT applies the LT predicate on the "uid" field.
func UIDLT(v string) predicate.Item {
	return predicate.Item(sql.FieldLT(FieldUID, v))
}

// UIDLTE applies the LTE predicate on the "uid" field.
func UIDLTE(v string) predicate.Item {
	return predicate.Item(sql.FieldLTE(FieldUID, v))
}

// UIDContains applies the Contains predicate on the "uid" field.
func UIDContains(v string) predicate.Item {
	return predicate.Item(sql.FieldContains(FieldUID, v))
}

// UIDHasPrefix applies the HasPrefix predicate on the "uid" field.
func UIDHasPrefix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasPrefix(FieldUID, v))
}

// UIDHasSuffix applies the HasSuffix predicate on the "uid" field.
func UIDHasSuffix(v string) predicate.Item {
	return predicate.Item(sql.FieldHasSuffix(FieldUID, v))
}

// UIDEqualFold applies the EqualFold predicate on the "uid" field.
func UIDEqualFold(v string) predicate.Item {
	return predicate.Item(sql.FieldEqualFold(FieldUID, v))
}

// UIDContainsFold applies the ContainsFold predicate on the "uid" field.
func UIDContainsFold(v string) predicate.Item {
	return predicate.Item(sql.FieldContainsFold(FieldUID, v))
}

// IsParentEQ applies the EQ predicate on the "is_parent" field.
func IsParentEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldEQ(FieldIsParent, v))
}

// IsParentNEQ applies the NEQ predicate on the "is_parent" field.
func IsParentNEQ(v bool) predicate.Item {
	return predicate.Item(sql.FieldNEQ(FieldIsParent, v))
}

// IsParentIsNil applies the IsNil predicate on the "is_parent" field.
func IsParentIsNil() predicate.Item {
	return predicate.Item(sql.FieldIsNull(FieldIsParent))
}

// IsParentNotNil applies the NotNil predicate on the "is_parent" field.
func IsParentNotNil() predicate.Item {
	return predicate.Item(sql.FieldNotNull(FieldIsParent))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Item) predicate.Item {
	return predicate.Item(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Item) predicate.Item {
	return predicate.Item(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Item) predicate.Item {
	return predicate.Item(func(s *sql.Selector) {
		p(s.Not())
	})
}
